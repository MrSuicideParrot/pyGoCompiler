
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDErightUMINUSINT FLOAT PLUS MINUS TIMES DIVIDE EQUALS LPAREN RPAREN ID COMMENT STRING EQUALSTO MORE LESS MOREEQUAL LESSEQUAL NOTEQUAL BREAK STRUCT RANGE GO DEFER VAR CASE CHAN IMPORT ELSE FALLTHROUGH FUNC SWITCH RETURN INTERFACE MAP DEFAULT GOTO CONTINUE IF PACKAGE CONST SELECT FOR TYPEstatement : expr_listexpr_list : expression\n                 | expression expr_listexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expressionexpression : MINUS expression %prec UMINUSexpression : INTexpression : FLOATexpression : LPAREN expression RPAREN'
    
_lr_action_items = {'RPAREN':([2,4,13,14,15,17,18,20,21,],[-9,-10,-8,20,-7,-6,-4,-11,-5,]),'INT':([0,2,3,4,5,6,8,9,10,11,13,15,16,17,18,19,20,21,],[2,-9,2,-10,2,2,2,2,2,2,-8,-7,-5,-6,-4,2,-11,-5,]),'FLOAT':([0,2,3,4,5,6,8,9,10,11,13,15,16,17,18,19,20,21,],[4,-9,4,-10,4,4,4,4,4,4,-8,-7,-5,-6,-4,4,-11,-5,]),'$end':([1,2,3,4,7,12,13,15,16,17,18,20,21,],[0,-9,-2,-10,-1,-3,-8,-7,-5,-6,-4,-11,-5,]),'DIVIDE':([2,3,4,13,14,15,16,17,18,20,21,],[-9,8,-10,-8,8,-7,8,-6,8,-11,8,]),'MINUS':([0,2,3,4,5,6,8,9,10,11,13,14,15,16,17,18,19,20,21,],[5,-9,9,-10,5,5,5,5,5,5,-8,19,-7,-5,-6,-4,5,-11,-5,]),'LPAREN':([0,2,3,4,5,6,8,9,10,11,13,15,16,17,18,19,20,21,],[6,-9,6,-10,6,6,6,6,6,6,-8,-7,-5,-6,-4,6,-11,-5,]),'PLUS':([2,3,4,13,14,15,16,17,18,20,21,],[-9,11,-10,-8,11,-7,-5,-6,-4,-11,-5,]),'TIMES':([2,3,4,13,14,15,16,17,18,20,21,],[-9,10,-10,-8,10,-7,10,-6,10,-11,10,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,3,5,6,8,9,10,11,19,],[3,3,13,14,15,16,17,18,21,]),'expr_list':([0,3,],[7,12,]),'statement':([0,],[1,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> expr_list','statement',1,'p_statement_expr','plintax.py',28),
  ('expr_list -> expression','expr_list',1,'p_expr_list','plintax.py',34),
  ('expr_list -> expression expr_list','expr_list',2,'p_expr_list','plintax.py',35),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','plintax.py',44),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','plintax.py',45),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','plintax.py',46),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','plintax.py',47),
  ('expression -> MINUS expression','expression',2,'p_expression_inverse','plintax.py',60),
  ('expression -> INT','expression',1,'p_expression_int','plintax.py',64),
  ('expression -> FLOAT','expression',1,'p_expression_float','plintax.py',69),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','plintax.py',73),
]
