
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDErightUMINUSINT FLOAT PLUS MINUS TIMES DIVIDE EQUALS LPAREN RPAREN VARexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expressionexpression : MINUS expression %prec UMINUSexpression : INTexpression : FLOATexpression : LPAREN expression RPAREN'
    
_lr_action_items = {'MINUS':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,],[2,7,2,-6,-7,2,2,2,2,2,-5,7,-1,-2,-3,-4,-8,]),'INT':([0,2,5,6,7,8,9,],[3,3,3,3,3,3,3,]),'FLOAT':([0,2,5,6,7,8,9,],[4,4,4,4,4,4,4,]),'LPAREN':([0,2,5,6,7,8,9,],[5,5,5,5,5,5,5,]),'$end':([1,3,4,10,12,13,14,15,16,],[0,-6,-7,-5,-1,-2,-3,-4,-8,]),'PLUS':([1,3,4,10,11,12,13,14,15,16,],[6,-6,-7,-5,6,-1,-2,-3,-4,-8,]),'TIMES':([1,3,4,10,11,12,13,14,15,16,],[8,-6,-7,-5,8,8,8,-3,-4,-8,]),'DIVIDE':([1,3,4,10,11,12,13,14,15,16,],[9,-6,-7,-5,9,9,9,-3,-4,-8,]),'RPAREN':([3,4,10,11,12,13,14,15,16,],[-6,-7,-5,16,-1,-2,-3,-4,-8,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,2,5,6,7,8,9,],[1,10,11,12,13,14,15,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','plintax.py',22),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','plintax.py',23),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','plintax.py',24),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','plintax.py',25),
  ('expression -> MINUS expression','expression',2,'p_expression_inverse','plintax.py',41),
  ('expression -> INT','expression',1,'p_expression_int','plintax.py',46),
  ('expression -> FLOAT','expression',1,'p_expression_float','plintax.py',51),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','plintax.py',56),
]
